{"ast":null,"code":"var _jsxFileName = \"/Users/sergejgalenko/Documents/GitHub/React-React-Redux-and-Redux-Saga---Master-React-State-Hooks/blackjack/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Deck from \"./Deck\";\nimport Menu from \"./Menu\";\nimport Result from \"./Result\";\nimport Settings from \"./Settings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst suits = [\"hearts\", \"diamonds\", \"clubs\", \"spades\"];\nconst ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"1\"];\nconst createDeck = () => {\n  const deck = [];\n  suits.forEach(suit => {\n    ranks.forEach(rank => {\n      deck.push({\n        suit,\n        rank\n      });\n    });\n  });\n  return deck;\n};\nconst shuffleDeck = deck => {\n  for (let i = deck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [deck[i], deck[j]] = [deck[j], deck[i]];\n  }\n  return deck;\n};\nconst getCardValue = card => {\n  if ([\"11\", \"12\", \"13\"].includes(card.rank)) {\n    return 10;\n  }\n  if (card.rank === \"1\") {\n    return 11;\n  }\n  return parseInt(card.rank);\n};\nconst calculateScore = hand => {\n  let score = hand.reduce((total, card) => total + getCardValue(card), 0);\n  let aces = hand.filter(card => card.rank === \"1\").length;\n  while (score > 21 && aces > 0) {\n    score -= 10;\n    aces -= 1;\n  }\n  return score;\n};\nconst Game = () => {\n  _s();\n  const [deck, setDeck] = useState([]);\n  const [playerHand, setPlayerHand] = useState([]); // Рука гравця\n  const [dealerHand, setDealerHand] = useState([]); // Рука дилера\n  const [playerScore, setPlayerScore] = useState(0); // Рахунок гравця\n  const [dealerScore, setDealerScore] = useState(0); // Рахунок дилера\n  const [gameState, setGameState] = useState(\"menu\"); // 'menu', 'playing', 'result'\n  const [result, setResult] = useState(\"\"); // 'win', 'lose', 'draw'\n  const [balance, setBalance] = useState(1000); // Початковий баланс гравця\n  const [bet, setBet] = useState(100); // Ставка\n  const [wins, setWins] = useState(0); // Кількість перемог\n  const [showSettings, setShowSettings] = useState(false);\n  useEffect(() => {\n    setDeck(shuffleDeck(createDeck()));\n  }, []);\n  const dealCard = (hand, setHand) => {\n    const newDeck = [...deck];\n    const card = newDeck.pop();\n    const newHand = [...hand, card];\n    setHand(newHand);\n    setDeck(newDeck);\n    return newHand;\n  };\n  const handleDeal = () => {\n    if (balance < bet) {\n      alert(\"Недостатньо коштів для цієї ставки!\");\n      return;\n    }\n    setBalance(balance - bet);\n    setDeck(shuffleDeck(createDeck())); // Перемішати колоду перед кожною грою\n\n    let newPlayerHand = [];\n    let newDealerHand = [];\n    newPlayerHand = dealCard(newPlayerHand, setPlayerHand);\n    newDealerHand = dealCard(newDealerHand, setDealerHand);\n    newPlayerHand = dealCard(newPlayerHand, setPlayerHand);\n    newDealerHand = dealCard(newDealerHand, setDealerHand);\n    setPlayerHand(newPlayerHand);\n    setDealerHand(newDealerHand);\n    setPlayerScore(calculateScore(newPlayerHand));\n    setDealerScore(calculateScore(newDealerHand));\n    setGameState(\"playing\");\n  };\n  const handleHit = () => {\n    const newPlayerHand = dealCard(playerHand, setPlayerHand);\n    const newPlayerScore = calculateScore(newPlayerHand);\n    setPlayerScore(newPlayerScore);\n    if (newPlayerScore > 21) {\n      setResult(\"lose\");\n      setGameState(\"result\");\n    }\n  };\n  const handleStand = () => {\n    let newDealerHand = [...dealerHand];\n    let newDealerScore = calculateScore(newDealerHand);\n    while (newDealerScore < 17) {\n      newDealerHand = dealCard(newDealerHand, setDealerHand);\n      newDealerScore = calculateScore(newDealerHand);\n    }\n    setDealerHand(newDealerHand);\n    setDealerScore(newDealerScore);\n    if (newDealerScore > 21 || playerScore > newDealerScore) {\n      setResult(\"win\");\n      setBalance(balance + bet * 2);\n      setWins(wins + 1);\n    } else if (playerScore < newDealerScore) {\n      setResult(\"lose\");\n    } else {\n      setResult(\"draw\");\n      setBalance(balance + bet);\n    }\n    setGameState(\"result\");\n  };\n  const handleRestart = () => {\n    setDeck(shuffleDeck(createDeck()));\n    setPlayerHand([]);\n    setDealerHand([]);\n    setPlayerScore(0);\n    setDealerScore(0);\n    setResult(\"\");\n    setGameState(\"menu\");\n  };\n  const handleShowSettings = () => {\n    setShowSettings(true);\n  };\n  const handleCloseSettings = () => {\n    setShowSettings(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [gameState === \"menu\" && /*#__PURE__*/_jsxDEV(Menu, {\n      onStart: handleDeal,\n      bet: bet,\n      setBet: setBet,\n      balance: balance,\n      onSettings: handleShowSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), gameState === \"playing\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0413\\u0440\\u0430 \\u0411\\u043B\\u0435\\u043A\\u0434\\u0436\\u0435\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u042F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Deck, {\n          cards: playerHand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0420\\u0430\\u0445\\u0443\\u043D\\u043E\\u043A: \", playerScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleHit,\n          children: \"\\u0412\\u0437\\u044F\\u0442\\u0438 \\u043A\\u0430\\u0440\\u0442\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStand,\n          children: \"\\u0417\\u0443\\u043F\\u0438\\u043D\\u0438\\u0442\\u0438\\u0441\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\u0420\\u0443\\u043A\\u0430 \\u0434\\u0438\\u043B\\u0435\\u0440\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Deck, {\n          cards: dealerHand.map((card, index) => index === 0 ? card : {\n            suit: \"hidden\",\n            rank: \"hidden\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0420\\u0430\\u0445\\u0443\\u043D\\u043E\\u043A: \", dealerScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: $\", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this), gameState === \"result\" && /*#__PURE__*/_jsxDEV(Result, {\n      result: result,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(Settings, {\n      onClose: handleCloseSettings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041F\\u0435\\u0440\\u0435\\u043C\\u043E\\u0433\\u0438: \", wins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"lWMpedAWkQ5IAkL0PbeXJwbI8K0=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Deck","Menu","Result","Settings","jsxDEV","_jsxDEV","suits","ranks","createDeck","deck","forEach","suit","rank","push","shuffleDeck","i","length","j","Math","floor","random","getCardValue","card","includes","parseInt","calculateScore","hand","score","reduce","total","aces","filter","Game","_s","setDeck","playerHand","setPlayerHand","dealerHand","setDealerHand","playerScore","setPlayerScore","dealerScore","setDealerScore","gameState","setGameState","result","setResult","balance","setBalance","bet","setBet","wins","setWins","showSettings","setShowSettings","dealCard","setHand","newDeck","pop","newHand","handleDeal","alert","newPlayerHand","newDealerHand","handleHit","newPlayerScore","handleStand","newDealerScore","handleRestart","handleShowSettings","handleCloseSettings","children","onStart","onSettings","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","cards","onClick","map","index","onRestart","onClose","className","_c","$RefreshReg$"],"sources":["/Users/sergejgalenko/Documents/GitHub/React-React-Redux-and-Redux-Saga---Master-React-State-Hooks/blackjack/src/components/Game.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Deck from \"./Deck\";\nimport Menu from \"./Menu\";\nimport Result from \"./Result\";\nimport Settings from \"./Settings\";\n\nconst suits = [\"hearts\", \"diamonds\", \"clubs\", \"spades\"];\nconst ranks = [\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"1\",\n];\n\nconst createDeck = () => {\n    const deck = [];\n    suits.forEach((suit) => {\n        ranks.forEach((rank) => {\n            deck.push({ suit, rank });\n        });\n    });\n    return deck;\n};\n\nconst shuffleDeck = (deck) => {\n    for (let i = deck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n    return deck;\n};\n\nconst getCardValue = (card) => {\n    if ([\"11\", \"12\", \"13\"].includes(card.rank)) {\n        return 10;\n    }\n    if (card.rank === \"1\") {\n        return 11;\n    }\n    return parseInt(card.rank);\n};\n\nconst calculateScore = (hand) => {\n    let score = hand.reduce((total, card) => total + getCardValue(card), 0);\n    let aces = hand.filter((card) => card.rank === \"1\").length;\n    while (score > 21 && aces > 0) {\n        score -= 10;\n        aces -= 1;\n    }\n    return score;\n};\n\nconst Game = () => {\n    const [deck, setDeck] = useState([]);\n    const [playerHand, setPlayerHand] = useState([]); // Рука гравця\n    const [dealerHand, setDealerHand] = useState([]); // Рука дилера\n    const [playerScore, setPlayerScore] = useState(0); // Рахунок гравця\n    const [dealerScore, setDealerScore] = useState(0); // Рахунок дилера\n    const [gameState, setGameState] = useState(\"menu\"); // 'menu', 'playing', 'result'\n    const [result, setResult] = useState(\"\"); // 'win', 'lose', 'draw'\n    const [balance, setBalance] = useState(1000); // Початковий баланс гравця\n    const [bet, setBet] = useState(100); // Ставка\n    const [wins, setWins] = useState(0); // Кількість перемог\n    const [showSettings, setShowSettings] = useState(false);\n\n    useEffect(() => {\n        setDeck(shuffleDeck(createDeck()));\n    }, []);\n\n    const dealCard = (hand, setHand) => {\n        const newDeck = [...deck];\n        const card = newDeck.pop();\n        const newHand = [...hand, card];\n        setHand(newHand);\n        setDeck(newDeck);\n        return newHand;\n    };\n\n    const handleDeal = () => {\n        if (balance < bet) {\n            alert(\"Недостатньо коштів для цієї ставки!\");\n            return;\n        }\n        setBalance(balance - bet);\n\n        setDeck(shuffleDeck(createDeck())); // Перемішати колоду перед кожною грою\n\n        let newPlayerHand = [];\n        let newDealerHand = [];\n\n        newPlayerHand = dealCard(newPlayerHand, setPlayerHand);\n        newDealerHand = dealCard(newDealerHand, setDealerHand);\n        newPlayerHand = dealCard(newPlayerHand, setPlayerHand);\n        newDealerHand = dealCard(newDealerHand, setDealerHand);\n\n        setPlayerHand(newPlayerHand);\n        setDealerHand(newDealerHand);\n\n        setPlayerScore(calculateScore(newPlayerHand));\n        setDealerScore(calculateScore(newDealerHand));\n\n        setGameState(\"playing\");\n    };\n\n    const handleHit = () => {\n        const newPlayerHand = dealCard(playerHand, setPlayerHand);\n        const newPlayerScore = calculateScore(newPlayerHand);\n        setPlayerScore(newPlayerScore);\n\n        if (newPlayerScore > 21) {\n            setResult(\"lose\");\n            setGameState(\"result\");\n        }\n    };\n\n    const handleStand = () => {\n        let newDealerHand = [...dealerHand];\n        let newDealerScore = calculateScore(newDealerHand);\n\n        while (newDealerScore < 17) {\n            newDealerHand = dealCard(newDealerHand, setDealerHand);\n            newDealerScore = calculateScore(newDealerHand);\n        }\n\n        setDealerHand(newDealerHand);\n        setDealerScore(newDealerScore);\n\n        if (newDealerScore > 21 || playerScore > newDealerScore) {\n            setResult(\"win\");\n            setBalance(balance + bet * 2);\n            setWins(wins + 1);\n        } else if (playerScore < newDealerScore) {\n            setResult(\"lose\");\n        } else {\n            setResult(\"draw\");\n            setBalance(balance + bet);\n        }\n\n        setGameState(\"result\");\n    };\n\n    const handleRestart = () => {\n        setDeck(shuffleDeck(createDeck()));\n        setPlayerHand([]);\n        setDealerHand([]);\n        setPlayerScore(0);\n        setDealerScore(0);\n        setResult(\"\");\n        setGameState(\"menu\");\n    };\n\n    const handleShowSettings = () => {\n        setShowSettings(true);\n    };\n\n    const handleCloseSettings = () => {\n        setShowSettings(false);\n    };\n\n    return (\n        <div>\n            {gameState === \"menu\" && (\n                <Menu\n                    onStart={handleDeal}\n                    bet={bet}\n                    setBet={setBet}\n                    balance={balance}\n                    onSettings={handleShowSettings}\n                />\n            )}\n            {gameState === \"playing\" && (\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <h1>Гра Блекджек</h1>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <h2>Я</h2>\n                        <Deck cards={playerHand} />\n                        <p>Рахунок: {playerScore}</p>\n                        <button onClick={handleHit}>Взяти карту</button>\n                        <button onClick={handleStand}>Зупинитися</button>\n                    </div>\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <h2>Рука дилера</h2>\n                        <Deck\n                            cards={dealerHand.map((card, index) =>\n                                index === 0\n                                    ? card\n                                    : { suit: \"hidden\", rank: \"hidden\" }\n                            )}\n                        />\n                        <p>Рахунок: {dealerScore}</p>\n                    </div>\n                    <p>Баланс: ${balance}</p>\n                </div>\n            )}\n            {gameState === \"result\" && (\n                <Result result={result} onRestart={handleRestart} />\n            )}\n            {showSettings && <Settings onClose={handleCloseSettings} />}\n            <div className=\"stats\">\n                <p>Перемоги: {wins}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}